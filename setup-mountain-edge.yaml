---
- name: Deploy Mountain Edge on One Node Cluster with IQube
  hosts: all
  become: yes
  vars:
    access_key: "<YOUR_MOUNTAIN_ACCESS_KEY>"
    kubernetes_substrate_version: "v2.0.4-3777c9ac"
    mountain_edge_stack_version: "v0.0.1-gf43bf88b-eada257f"
  tasks:

    - name: Ensure epel-release and CIQ public release are installed
      yum:
        name: "https://repository.ciq.com/ciq-public-release.rpm"
        state: present

    - name: Install mtn package
      yum:
        name: mtn
        state: present

    - name: Enroll with Mountain
      command: mtn enroll {{ access_key }}

    - name: Enable fuzzball-substrate subscription
      command: mtn dnf enable fuzzball-substrate

    - name: Install necessary packages
      yum:
        name: 
          - rng-tools
          - nfs-utils
          - fuzzball-substrate
        state: present

    - name: Enable and start rngd service
      systemd:
        name: rngd
        enabled: yes
        state: started

    - name: Check rngd service status
      command: systemctl status rngd
      register: rngd_status

    - name: Display rngd status
      debug:
        msg: "{{ rngd_status.stdout }}"

    - name: Check firewalld status
      command: systemctl status firewalld
      register: firewalld_status

    - name: Display firewalld status
      debug:
        msg: "{{ firewalld_status.stdout }}"

    - name: Disable firewalld
      systemd:
        name: firewalld
        enabled: no
        state: stopped

    - name: Add interfaces to the trusted zone
      command: firewall-cmd --permanent --zone=trusted --add-interface=enp1s0

    - name: Reload firewall configuration
      command: firewall-cmd --reload

    - name: Configure NetworkManager for IQube
      copy:
        dest: /etc/NetworkManager/conf.d/iqube.conf
        content: |
          [keyfile]
          unmanaged-devices=interface-name:cni*;interface-name:flannel*
      notify: Restart NetworkManager

    - name: Create fuzzball-substrate.env file
      copy:
        dest: /etc/default/fuzzball-substrate.env
        content: |
          FB_STANDALONE=true
          FB_MOUNTNS=true

    - name: Enable and start fuzzball-substrate service
      systemd:
        name: fuzzball-substrate
        enabled: yes
        state: started

    - name: Generate SSH key for IQube
      command: ssh-keygen -t rsa -N "" -f /root/.ssh/iqube
      args:
        creates: /root/.ssh/iqube

    - name: Add public key to authorized_keys
      shell: cat /root/.ssh/iqube.pub >> /root/.ssh/authorized_keys

    - name: Verify authorized_keys
      command: less /root/.ssh/authorized_keys

    - name: Enable IQube subscription
      command: mtn dnf enable iqube

    - name: Install Apptainer and IQube packages
      yum:
        name:
          - "https://github.com/apptainer/apptainer/releases/download/v1.3.0/apptainer-1.3.0-1.x86_64.rpm"
          - "https://github.com/apptainer/apptainer/releases/download/v1.3.0/apptainer-suid-1.3.0-1.x86_64.rpm"
          - iqube
        state: present

    - name: Login to Apptainer
      command: apptainer remote login -u ciq -p {{ access_key }} oras://repository.ciq.com

    - name: Pull kubernetes-substrate image
      command: apptainer pull kubernetes-substrate.sif oras://repository.ciq.com/iqube/iqube-images/kubernetes-substrate:{{ kubernetes_substrate_version }}

    - name: Pull mountain-edge-stack image
      command: apptainer pull mountain-edge-stack.sif oras://repository.ciq.com/mountain-edge/iqube-images/mountain-edge:{{ mountain_edge_stack_version }}

    - name: Copy iqube deployment example
      copy:
        src: /usr/share/iqube/iqube-deployment-example.yaml
        dest: /root/iqube.yaml

    - name: Create new context for IQube
      command: iqube new --context default kubernetes-substrate.sif

    - name: Bootstrap IQube
      command: iqube bootstrap up

    - name: Sync IQube
      command: iqube sync -b kubernetes-substrate_{{ kubernetes_substrate_version }}.sif

    - name: Provision IQube cluster
      command: iqube provision up

    - name: Check running pods
      command: iqube exec kubectl get pods -A --watch

    - name: Get logs for specific pod
      command: iqube exec kubectl logs --follow -n <namespace_name> <pod_name>

    - name: Follow fuzzball-substrate logs
      command: journalctl -u fuzzball-substrate

    - name: Get cluster info
      command: iqube provision info
      register: cluster_info

    - name: Display cluster info
      debug:
        msg: "{{ cluster_info.stdout }}"

  handlers:
    - name: Restart NetworkManager
      systemd:
        name: NetworkManager
        state: restarted